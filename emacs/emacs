					;start package.el with emacs
(require 'package)
					;add MELPA to repository list
(add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/"))
					; initialize package.el
(package-initialize)
					; start auto-complete with emacs
(require 'auto-complete)
					;do default config for auto-complete
(require 'auto-complete-config)
(ac-config-default)


					;start yasnippet with emacs
(require 'yasnippet)
(yas-global-mode 1)
					;define a function which initialize auto-complete-c-headers
(defun my:ac-c-header-init()
  (require 'auto-complete-c-headers)
  (add-to list 'ac-source 'ac-source-c-headers)
  (add-to-list 'achead:include-directories '"/usr/lib/gcc/x86_64-unknown-linux-gnu/5.2.0/include"))
					;call this function from c/c++ hooks
(add-hook 'c++-mode-hook 'my:ac-c-header-init)
(add-hook 'c-mode-hook 'my:ac-c-header-init)
					;fix iedit bugs
(define-key global-map (kbd "C-c ;") 'iedit-mode)
;turn on semantic
(semantic-mode 1)
;defime a function which adds semantic as a suggestion backed to auto complete
(defun my:add-semantic-to-autocomplete()
  (add-to-list 'ac-sources 'ac-source-semantic)
  )
					;hook function to c-mode-common-hook
(add-hook 'c-mode-common-hook 'my:add-semantic-to-autocomplete)
					;turn on ede mode
(global-ede-mode 1)
					;turn on automatic reparsing of open buffers in semantic
(global-semantic-idle-scheduler-mode 1)
;; Preset width nlinum
(require 'hlinum)
(hlinum-activate)

(add-hook 'find-file-hook (lambda () (linum-mode 1)))
(add-hook 'nlinum-mode-hook
	  (lambda ()
	    (setq nlinum--width
		  (length (number-to-string
			   (count-lines (point-min) (point-max)))))))
(setq linum-format "%4d \u2502 ")
					;start eclim  prepei na to fiax
(require 'eclim)
(global-eclim-mode)
					;enable company mode
(require 'company)
(require 'company-emacs-eclim)
(company-emacs-eclim-setup)
(global-company-mode t)
					;display compilation error message
(setq help-at-pt-display-when-idle t)
(setq help-at-pt-timer-delay 0.1)
(help-at-pt-set-timer)
					;change backup directory
(setq backup-directory-alist `(("." . "~/.saves")))
					;enable backup by copying
(setq backup-by-copying t)


(add-to-list 'auto-mode-alist
	     '("\\.\\(?:cap\\|gemspec\\|irbrc\\|gemrc\\|rake\\|rb\\|ru\\|thor\\)\\'" . ruby-mode))
(add-to-list 'auto-mode-alist
	     '("\\(?:Brewfile\\|Capfile\\|Gemfile\\(?:\\.[a-zA-Z0-9._-]+\\)?\\|[rR]akefile\\)\\'" . ruby-mode))

(add-to-list 'load-path "~/.emacs.d/rsense-mod")
(require 'rsense)


(add-hook 'ruby-mode-hook 'robe-mode)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages
   (quote
    (ensime scala-mode yasnippet rsense robe iedit hlinum emacs-eclim company auto-complete-c-headers ac-c-headers))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

(require 'ensime)
